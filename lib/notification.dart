import 'package:audioplayers/audioplayers.dart';
import 'package:flutter/material.dart';
import 'package:hms_room_kit/hms_room_kit.dart';
import 'package:permission_handler/permission_handler.dart';

class NotificationPage extends StatelessWidget {
  const NotificationPage({super.key});

  Future<void> showIncomingCallOverlay(
      BuildContext context, String lawyerName) async {
    late OverlayEntry overlay;
    final player = AudioPlayer();

    // üîÅ ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ß‡∏ô‡∏ã‡πâ‡∏≥
    await player.setReleaseMode(ReleaseMode.loop);

    // üîä ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å asset
    await player.play(AssetSource('incoming_call.mp3'));

    overlay = OverlayEntry(
      builder: (context) => Positioned(
        top: 50,
        left: 20,
        right: 20,
        child: Material(
          color: Colors.transparent,
          child: Container(
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color:
                  const Color(0xFF3A3A3C), // ‡πÄ‡∏ó‡∏≤‡πÄ‡∏Ç‡πâ‡∏°‡∏Å‡∏•‡∏≤‡∏á (‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢ iOS Dark Card)
              borderRadius: BorderRadius.circular(16),
              boxShadow: [
                BoxShadow(
                  color: Colors.black.withOpacity(0.4),
                  blurRadius: 10,
                  offset: const Offset(0, 4),
                ),
              ],
            ),
            child: Row(
              children: [
                const Icon(Icons.video_call, color: Colors.white, size: 30),
                const SizedBox(width: 12),
                Expanded(
                  child: Text(
                    "‡∏™‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏à‡∏≤‡∏Å $lawyerName",
                    style: const TextStyle(
                        color: Colors.white, fontWeight: FontWeight.bold),
                  ),
                ),
                IconButton(
                  icon: const Icon(Icons.call_end, color: Colors.red),
                  onPressed: () {
                    player.stop(); // üîá ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á
                    overlay.remove();
                  },
                ),
                IconButton(
                  icon: const Icon(Icons.call, color: Colors.greenAccent),
                  onPressed: () {
                    player.stop(); // üîá ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á
                    overlay.remove();
                    _showReminderBeforeJoin(
                        context); // ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏¥‡∏î Video Call ‡∏à‡∏£‡∏¥‡∏á
                  },
                ),
              ],
            ),
          ),
        ),
      ),
    );

    Overlay.of(context).insert(overlay);

    // ‚ùå Auto dismiss ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 10 ‡∏ß‡∏¥
    Future.delayed(const Duration(seconds: 10), () {
      if (overlay.mounted) {
        player.stop();
        overlay.remove();
      }
    });
  }

  void _showReminderBeforeJoin(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text("‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á"),
        content: const Text(
            "üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á Enter Name ‡∏ß‡πà‡∏≤ 1234 ‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏î Join Now"),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(context).pop(),
            child: const Text("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"),
          ),
          ElevatedButton(
            onPressed: () async {
              Navigator.of(context).pop(); // ‡∏õ‡∏¥‡∏î dialog

              Map<Permission, PermissionStatus> statuses = await [
                Permission.camera,
                Permission.microphone,
              ].request();

              // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏î‡∏ô‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÅ‡∏ö‡∏ö‡∏ñ‡∏≤‡∏ß‡∏£ (iOS ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏≤‡∏°‡∏ã‡πâ‡∏≥)
              if (statuses.values.any((s) => s.isPermanentlyDenied)) {
                showDialog(
                  context: context,
                  builder: (context) => AlertDialog(
                    title: const Text("‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÉ‡∏ô Settings"),
                    content: const Text(
                        "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏õ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πÇ‡∏Ñ‡∏£‡πÇ‡∏ü‡∏ô"),
                    actions: [
                      TextButton(
                        onPressed: () => Navigator.of(context).pop(),
                        child: const Text("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"),
                      ),
                      TextButton(
                        onPressed: () {
                          openAppSettings(); // ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ Settings
                        },
                        child: const Text("‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"),
                      ),
                    ],
                  ),
                );
                return;
              }

              bool allGranted =
                  statuses.values.every((status) => status.isGranted);

              if (allGranted) {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => HMSPrebuilt(
                      roomCode: "jle-wjbx-gyk",
                    ),
                  ),
                );
              } else {
                // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
                showDialog(
                  context: context,
                  builder: (context) => AlertDialog(
                    title: const Text("‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò"),
                    content: const Text(
                        "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πÇ‡∏Ñ‡∏£‡πÇ‡∏ü‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Ñ‡∏≠‡∏•"),
                    actions: [
                      TextButton(
                        onPressed: () => Navigator.of(context).pop(),
                        child: const Text("‡∏ï‡∏Å‡∏•‡∏á"),
                      ),
                    ],
                  ),
                );
              }
            },
            child: const Text("‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"),
          ),
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    final List<Map<String, String>> notifications = [
      {
        "title": "‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß",
        "time": "10 ‡πÄ‡∏°.‡∏¢. 2568 - 10:00 ‡∏ô.",
      },
      {
        "title": "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏ó‡∏ô‡∏≤‡∏¢‡∏≠‡∏£‡∏≠‡∏ô‡∏á‡∏Ñ‡πå",
        "time": "9 ‡πÄ‡∏°.‡∏¢. 2568 - 16:45 ‡∏ô.",
      },
      {
        "title": "‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß",
        "time": "8 ‡πÄ‡∏°.‡∏¢. 2568 - 12:00 ‡∏ô.",
      },
    ];

    return Scaffold(
      backgroundColor: const Color(0xFF1E1E2C),
      appBar: AppBar(
        title: const Text("‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô"),
        backgroundColor: Colors.transparent,
        elevation: 0,
        foregroundColor: Colors.white,
      ),
      body: ListView.builder(
        padding: const EdgeInsets.all(20),
        itemCount: notifications.length,
        itemBuilder: (context, index) {
          final notify = notifications[index];
          return InkWell(
            onTap: () {
              // if (notify["title"]!.contains("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏ó‡∏ô‡∏≤‡∏¢‡∏≠‡∏£‡∏≠‡∏ô‡∏á‡∏Ñ‡πå")) {
              //   showIncomingCallOverlay(context, "‡∏ó‡∏ô‡∏≤‡∏¢‡∏≠‡∏£‡∏≠‡∏ô‡∏á‡∏Ñ‡πå");
              // }

              showIncomingCallOverlay(context, "‡∏ó‡∏ô‡∏≤‡∏¢‡∏≠‡∏£‡∏≠‡∏ô‡∏á‡∏Ñ‡πå");
            },
            child: Container(
              margin: const EdgeInsets.only(bottom: 12),
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: const Color(0xFF2C2C3E),
                borderRadius: BorderRadius.circular(12),
              ),
              child: Row(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  const Icon(Icons.notifications, color: Colors.amber),
                  const SizedBox(width: 12),
                  Expanded(
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          notify["title"]!,
                          style: const TextStyle(
                            color: Colors.white,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        const SizedBox(height: 4),
                        Text(
                          notify["time"]!,
                          style: const TextStyle(color: Colors.white54),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}
